# docker-compose.yaml
x-airflow-base: &airflow-base
  # AU LIEU DE 'image:', on utilise 'build:' pour construire notre Dockerfile
  build: .
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
    # On dit à Airflow de chercher les modules Python dans ces deux dossiers
    PYTHONPATH: /opt/airflow/dags:/opt/airflow/scripts_pipeline
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    # On monte le dossier data pour pouvoir y mettre le fichier d'input
    # et récupérer les fichiers d'output
    - ./data:/opt/airflow/data

services:
  postgres:
    image: postgres:15
    container_name: airflow-postgres-final
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow-db-data-final:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow-init:
    <<: *airflow-base
    container_name: airflow-init-final
    entrypoint: /bin/bash
    command:
      - -c
      - airflow db upgrade && airflow users create --username airflow --password airflow --firstname Airflow --lastname Admin --role Admin --email admin@example.org || true

  airflow-webserver:
    <<: *airflow-base
    container_name: airflow-webserver-final
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-base
    container_name: airflow-scheduler-final
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully

volumes:
  airflow-db-data-final: